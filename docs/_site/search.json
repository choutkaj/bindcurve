[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BindCurve",
    "section": "",
    "text": "top menu: introduction tutorials API reference theory playground\nThis is a Quarto website.\nthis is a new sentence\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n\n\nThis page brought to you by https://example.com"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\nmore stuff"
  },
  {
    "objectID": "theory.html",
    "href": "theory.html",
    "title": "Theory",
    "section": "",
    "text": "\\([R]_T\\) \\([R]\\)\n\\([L^*]_T\\) \\([L^*]\\)\n\\([L]_T\\) \\([L]\\)\n\\([RL^*]\\) \\([RL]\\) \\([RLL^*]\\)\n\\(K_d^*\\) \\(K_d\\) \\(K_{d3}\\)",
    "crumbs": [
      "Home",
      "Theory"
    ]
  },
  {
    "objectID": "theory.html#model---direct-binding-simple",
    "href": "theory.html#model---direct-binding-simple",
    "title": "Theory",
    "section": "Model - Direct Binding, Simple",
    "text": "Model - Direct Binding, Simple\n\nModel A\n\n\nModel B\n\\[[R] = [R]_T\\]",
    "crumbs": [
      "Home",
      "Theory"
    ]
  },
  {
    "objectID": "theory.html#model---direct-binding-specific",
    "href": "theory.html#model---direct-binding-specific",
    "title": "Theory",
    "section": "Model - Direct Binding, Specific",
    "text": "Model - Direct Binding, Specific\nDissociation constant is defined as\n\\[\nK_d^* = \\frac{[R][L^*]}{[RL^*]}\n\\]\nConservation of mass requires that\n\\[ [L^* ]_T = [L^*] + [RL^*] \\]\n\\[ [R]_T = [R] + [RL^*] \\]\nand thus\n\\[ [RL^*] = \\frac{[R][L^*]_T}{K_d^* + [R]} \\]\nQuadratic Equation:\n\\[ [R]^2 + a[R] + b = 0 \\]\nwhere\n\\[ a = K_d^* + [L^* ]_T - [R]_T \\]\n\\[ b = -K_d^* [R]_T \\]\nUsing the quadratic formula, the positive root is\n\\[ [R] = \\frac{-a + \\sqrt{a^2 - 4b}}{2} \\]",
    "crumbs": [
      "Home",
      "Theory"
    ]
  },
  {
    "objectID": "theory.html#model---direct-binding-specific-nonspecific",
    "href": "theory.html#model---direct-binding-specific-nonspecific",
    "title": "Theory",
    "section": "Model - Direct Binding, Specific + Nonspecific",
    "text": "Model - Direct Binding, Specific + Nonspecific\nDissociation constant is defined as\n\\[ K_d^* = \\frac{[R][L^*]}{[RL^*]} \\]\nConservation of mass requires that\n\\[ [L^* ]_T = [L^*] + [RL^*] + N^* [L^*] \\]\n\\[ [R]_T = [R] + [RL^*] \\]\nand thus\n\\[ [RL^*] = \\frac{[R][L^*]_T}{K_d^* (1 + N^*) + [R]} \\]\nQuadratic Equation:\n\\[ [R]^2 + a[R] + b = 0 \\]\nwhere\n\\[ a = K_d^* (1 + N^*) + [L^* ]_T - [R]_T \\]\n\\[ b = -K_d^* [R]_T (1 + N^*) \\]\nUsing the quadratic formula, the positive root is\n\\[ [R] = \\frac{-a + \\sqrt{a^2 - 4b}}{2} \\]\ndalší pokusy:\n\\[\n[R] = -\\frac{a}{3} + \\frac{2}{3} \\sqrt{(a^2 - 3b)} \\cos\\left(\\frac{\\theta}{3}\\right)\n\\]\n\n\n\nDay\nTemperature (°C)\nPrecipitation (mm)\n\n\n\n\nMon\n20\n5\n\n\nTue\n22\n0\n\n\nWed\n18\n12\n\n\nThu\n24\n0\n\n\nFri\n19\n8",
    "crumbs": [
      "Home",
      "Theory"
    ]
  },
  {
    "objectID": "theory.html#symbols",
    "href": "theory.html#symbols",
    "title": "Theory",
    "section": "",
    "text": "\\([R]_T\\) \\([R]\\)\n\\([L^*]_T\\) \\([L^*]\\)\n\\([L]_T\\) \\([L]\\)\n\\([RL^*]\\) \\([RL]\\) \\([RLL^*]\\)\n\\(K_d^*\\) \\(K_d\\) \\(K_{d3}\\)"
  },
  {
    "objectID": "models.html",
    "href": "models.html",
    "title": "Models",
    "section": "",
    "text": "BindCurve offers several models:",
    "crumbs": [
      "Home",
      "Models"
    ]
  },
  {
    "objectID": "models.html#symbols",
    "href": "models.html#symbols",
    "title": "Models",
    "section": "1 Symbols",
    "text": "1 Symbols\n\\([R]_T\\) \\([R]\\)\n\\([L^*]_T\\) \\([L^*]\\)\n\\([L]_T\\) \\([L]\\)\n\\([RL^*]\\) \\([RL]\\) \\([RLL^*]\\)\n\\(K_d^*\\) \\(K_d\\) \\(K_{d3}\\)\nfit_50, fit_Kd_direct, fit_Kd_competition, convert\n\n1.1 Direct binding models\nThese models are calculated by the fit_Kd_direct function. It is assumed that LsT is fixed and RT is titrated. Parameters min and max could be fixed.\n\n\n\n\n\n\n\n\n\n\nModel name\nDescription\nComplexity\nInput parameters\nFitted parameters\n\n\n\n\ndir_simple\nDirect binding - simple\n\\([R] = [R]_T\\)\n-\nmin, max, Kds\n\n\ndir_specific\nDirect binding - specific\nquadratic\nLsT\nmin, max, Kds\n\n\ndir_total\nDirect binding - total\nquadratic\nLsT, Ns\nmin, max, Kds\n\n\n\n\n\n1.2 Competitive binding - logistic models\nThese models are calculated by the fit_50 function. You can use these models for any dose-response curves without knowing any concentrations of the system components. Parameters min, max and slope could be fixed. If you fix slope to -1 or 1, the model will be reduced from a model with variable slope to a model with fixed slope.\n\n\n\n\n\n\n\n\n\n\nModel name\nDescription\nComplexity\nInput parameters\nFitted parameters\n\n\n\n\nIC50\nFits midpoint from c\nlogistic\n-\nmin, max, slope, IC50\n\n\nlogIC50\nFits midpoint from log(c)\nlogistic\n-\nmin, max, slope, logIC50\n\n\n\n\n\n1.3 Competitive binding - exact polynomial models\nThese models are calculated using the fit_Kd_competition function.\n\n\n1.4 IC50 -&gt; Kd conversion models\nThese models are calculated using the convert function."
  },
  {
    "objectID": "models.html#fixing",
    "href": "models.html#fixing",
    "title": "Models",
    "section": "2 Fixing",
    "text": "2 Fixing"
  },
  {
    "objectID": "models.html#fixing-parameters",
    "href": "models.html#fixing-parameters",
    "title": "Models",
    "section": "1 Fixing parameters",
    "text": "1 Fixing parameters\nBindCurve allows fixing certain parameters during fitting to user-defined value. In all models, you can fix both the ymin and/or ymax parameters which will constrain the lower and/or upper asymptote of the model. For example, if your data are normalized between 0 and 1, you can simply fix ymin to 0 and ymax to 1 and the fit will be constrained to these values. You can also fix these parameters to any other arbitrary value depending on your situation. The fit_50 function also allows fixing the slope parameter for the logistic models, which could be used to simplify the model. Typically, you might want to fix the slope to either -1 for inhibition, or 1 for activation.\nFixing of ymin and ymax parameters is controled by fix_min and fix_max arguments when calling any fitting function in BindCurve. The slope parameter can be fixed by fix_slope argument (only available for fit_50 function). All of these parameters are set to False by default, which means the parameter is fitted freely. When you change the fix_min, fix_max or fix_slope to any numerical value, the parameter will be fixed to the given value.\n\n# This will fix minimum to 0. Maximum and slope are fitted freely.\nIC50_results = bc.fit_50(input_data, model=\"IC50\", fix_min=0)\n\n# This will fix minimum to 0 and maximum to 1, slope is fitted variably\nIC50_results = bc.fit_50(input_data, model=\"IC50\", fix_min=0, fix_max=1)\n\n# This will fix minimum to 0, maximum to 1 and slope to -1\nIC50_results = bc.fit_50(input_data, model=\"IC50\", fix_min=0, fix_max=1, fix_slope=-1)\n\nFixing can also be useful when fitting Kd using the exact polynomial models. For example, if your competitive inhibition curve is not titrated all the way to the minimum asymptote, you can just fix the ymin parameter to the value of the lower asymptote, which you have determined previously from direct binding.\n\n# This will fix minimum to 20, maximum is fitted freely\nKd_results = bc.fit_Kd_competition(input_data, model=\"comp_3st_specific\", fix_min=20)\n\n# This will fix minimum to 20 and maximum to 140\nKd_results = bc.fit_Kd_competition(input_data, model=\"comp_3st_specific\", fix_min=20, fix_max=140)\n\n\n\n\n\n\n\nNote\n\n\n\nThe ymin and ymax parameters have different meaning for the logistic models and for the exact Kd models. In the logistic models, ymin and ymax will always correspont to the actual minimum and maximum of the curve, while for the exact Kd models these values define the asymptotes of the model, which might not be the same as the minimum and maximum of the observed curve."
  },
  {
    "objectID": "models.html#uncertainties",
    "href": "models.html#uncertainties",
    "title": "Models",
    "section": "Uncertainties",
    "text": "Uncertainties\nBindCurve offers two kinds of uncertainty estimates for the fitted parameters, both obtained from the underlying LMFIT library. For every fit, standard error (SE) is outputted. Additionally, the calculation of 95% confidence intervals is enabled by default, but could be disabled by setting ci=False. The 95% confidence interval is outputted as loCL and upCL, which correspond to lower and upper confidence limits. Please note that the 95% confidence interval can only be calculated if more than one parameter is freely fitted. In case only one parameter is freely fitted, BindCurve will automatically set ci=False and only SE will be calculated.",
    "crumbs": [
      "Home",
      "Models"
    ]
  },
  {
    "objectID": "models.html#goodness-of-fit",
    "href": "models.html#goodness-of-fit",
    "title": "Models",
    "section": "Goodness of fit",
    "text": "Goodness of fit\nTo quantify the goodness of fit, \\(\\chi^2\\) and \\(R^2\\) metrics are outputted for every fit. Good fit is characterized by low value of \\(\\chi^2\\) and high value (close to 1) of \\(R^2\\).",
    "crumbs": [
      "Home",
      "Models"
    ]
  },
  {
    "objectID": "models.html#parameter-fixing",
    "href": "models.html#parameter-fixing",
    "title": "Models",
    "section": "Parameter fixing",
    "text": "Parameter fixing\nBindCurve allows fixing certain parameters during fitting to user-defined value. In all models, you can fix both the ymin and/or ymax parameters which will constrain the lower and/or upper asymptote of the model. For example, if your data are normalized between 0 and 1, you can simply fix ymin to 0 and ymax to 1 and the fit will be constrained to these values. You can also fix these parameters to any other arbitrary value depending on your situation. The fit_50 function also allows fixing the slope parameter for the logistic models, which could be used to simplify the model. Typically, you might want to fix the slope to either -1 for inhibition, or 1 for activation.\nFixing of ymin and ymax parameters is controled by fix_ymin and fix_ymax arguments when calling any fitting function in BindCurve. The slope parameter can be fixed by fix_slope argument (only available for fit_50 function). All of these parameters are set to False by default, which means the parameter is fitted freely. When you change the fix_ymin, fix_ymax or fix_slope to any numerical value, the parameter will be fixed to the given value.\n\n# This will fix minimum to 0. Maximum and slope are fitted freely.\nIC50_results = bc.fit_50(input_data, model=\"IC50\", fix_ymin=0)\n\n# This will fix minimum to 0 and maximum to 1, slope is fitted variably\nIC50_results = bc.fit_50(input_data, model=\"IC50\", fix_ymin=0, fix_ymax=1)\n\n# This will fix minimum to 0, maximum to 1 and slope to -1\nIC50_results = bc.fit_50(input_data, model=\"IC50\", fix_ymin=0, fix_ymax=1, fix_slope=-1)\n\nFixing can also be useful when fitting Kd using the exact polynomial models. For example, if your competitive inhibition curve is not titrated all the way to the minimum asymptote, you can just fix the ymin parameter to the value of the lower asymptote, which you have determined previously from direct binding.\n\n# This will fix minimum to 20, maximum is fitted freely\nKd_results = bc.fit_Kd_competition(input_data, model=\"comp_3st_specific\", fix_ymin=20)\n\n# This will fix minimum to 20 and maximum to 140\nKd_results = bc.fit_Kd_competition(input_data, model=\"comp_3st_specific\", fix_ymin=20, fix_ymax=140)\n\n\n\n\n\n\n\nNote\n\n\n\nThe ymin and ymax parameters have different meaning for the logistic models and for the exact Kd models. In the logistic models, ymin and ymax will always correspont to the actual minimum and maximum of the curve, while for the exact Kd models, these values define the asymptotes of the model which might not be the same as the minimum and maximum of the curve.",
    "crumbs": [
      "Home",
      "Models"
    ]
  },
  {
    "objectID": "symbols.html",
    "href": "symbols.html",
    "title": "BindCurve",
    "section": "",
    "text": "BindCurve uses the following symbols:\n\n\n\n\n\n\n\n\nSymbol\nSymbol in code\nMeaning\n\n\n\n\n\\([R]_T\\)\nRT\nTotal concentration of receptor.\n\n\n\\([R]\\)\nR\nConcentration of free receptor.\n\n\n\\([L^*]_T\\)\nLsT\nTotal concentration of labelled ligand.\n\n\n\\([L^*]\\)\nLs\nConcentration of free labelled ligand.\n\n\n\\([L]_T\\)\nLT\nTotal concentration of unlabelled ligand.\n\n\n\\([L]\\)\nL\nConcentration of free unlabelled ligand.\n\n\n\\([RL^*]\\)\nRLs\nConcentration of (receptor-labelled ligand) complex.\n\n\n\\([RL]\\)\nRL\nConcentration of (receptor-unlabelled ligand) complex.\n\n\n\\([RLL^*]\\)\nRLLs\nConcentration of (receptor-unlabelled ligand-labelled ligand) complex.\n\n\n\\(K_d^*\\)\nKds\nDissociation constant of labelled ligand.\n\n\n\\(K_d\\)\nKd\nDissociation constant of unlabelled ligand.\n\n\n\\(K_{d3}\\)\nKd3\nThe third dissociation constant in four-state models.\n\n\n\\(N^*\\)\nNs\nNonspecific binding parameter for the labeled ligand.\n\n\n\\(N\\)\nN\nNonspecific binding parameter for the unlabeled ligand.",
    "crumbs": [
      "Home",
      "Symbols"
    ]
  },
  {
    "objectID": "symbols.html#symbols",
    "href": "symbols.html#symbols",
    "title": "BindCurve",
    "section": "",
    "text": "BindCurve uses the following symbols:\n\n\n\n\n\n\n\n\nSymbol\nSymbol in code\nMeaning\n\n\n\n\n\\([R]_T\\)\nRT\nTotal concentration of receptor.\n\n\n\\([R]\\)\nR\nConcentration of free receptor.\n\n\n\\([L^*]_T\\)\nLsT\nTotal concentration of labelled ligand.\n\n\n\\([L^*]\\)\nLs\nConcentration of free labelled ligand.\n\n\n\\([L]_T\\)\nLT\nTotal concentration of unlabelled ligand.\n\n\n\\([L]\\)\nL\nConcentration of free unlabelled ligand.\n\n\n\\([RL^*]\\)\nRLs\nConcentration of (receptor-labelled ligand) complex.\n\n\n\\([RL]\\)\nRL\nConcentration of (receptor-unlabelled ligand) complex.\n\n\n\\([RLL^*]\\)\nRLLs\nConcentration of (receptor-unlabelled ligand-labelled ligand) complex.\n\n\n\\(K_d^*\\)\nKds\nDissociation constant of labelled ligand.\n\n\n\\(K_d\\)\nKd\nDissociation constant of unlabelled ligand.\n\n\n\\(K_{d3}\\)\nKd3\nThe third dissociation constant in four-state models.\n\n\n\\(N^*\\)\nNs\nNonspecific binding parameter for the labeled ligand.\n\n\n\\(N\\)\nN\nNonspecific binding parameter for the unlabeled ligand.",
    "crumbs": [
      "Home",
      "Symbols"
    ]
  },
  {
    "objectID": "theory.html#logistic-models",
    "href": "theory.html#logistic-models",
    "title": "Theory",
    "section": "Logistic models",
    "text": "Logistic models\nLogistic models are implemented in the traditional sigmoid form. This model could be used broadly for any dose-response curve, where x corresponds to dose and y corresponds to response. In the context of BindCurve, x will commonly correspond to the total concentration of the titrated ligand. By fixing the slope in these models to a constant value (e.g. 1 for activation and -1 for inhibition), this four-parameter model is reduced to a three-parameter model.\n\\(\\text{IC}_{50}\\) is fitted using the following equation:\n\\[\ny = ymin + (ymax - ymin) \\frac{1}{1 + \\left(\\frac{\\text{IC}_{50}}{x}\\right)^{\\text{slope}}}\n\\]\nwhere x is the dose, usually the total concentration of the titrated ligand\n\\[\nx = [L]_T\n\\]\nAnalogically, \\(\\text{logIC}_{50}\\) is fitted using:\n\\[\ny = ymin + (ymax - ymin) \\frac{1}{1 + 10^{\\text{slope}(\\text{logIC}_{50} - x)}}\n\\]\nwhere x is log transformed dose\n\\[\nx = \\log([L]_T)\n\\]",
    "crumbs": [
      "Home",
      "Theory"
    ]
  },
  {
    "objectID": "theory.html#exact-polynomial-models",
    "href": "theory.html#exact-polynomial-models",
    "title": "Theory",
    "section": "Exact polynomial models",
    "text": "Exact polynomial models\nBindCurve implements several exact models that allow for direct fitting of \\(K_d\\) from both direct and competitive binding experiments, given some crucial information about the system is known. These models are based on the assumption that the observed binding curve could be related to the bound fraction of the labeled ligand. This quantity is denoted as \\(F_b^*\\) and is defined as:\n\\[\nF_b^* = \\frac{[RL^*]}{[L^*]_T}\n\\]\nwhere \\([RL^*]\\) is the concentration of the complex of receptor and labeled ligand, and \\([L^*]_T\\) is the total concentration of the labeled ligand.\n\nDirect binding\n\n\n\n\n\nIn direct binding, the system is composed of receptor \\(R\\) and labeled ligand \\(L^*\\) which form complex \\(RL^*\\). This binding equilibrium is described by a dissociation constant \\(K_d^*\\). For such a system, \\(F_b^*\\) could be related to the concentration of free receptor \\([R]\\) by the equation\n\\[\nF_b^* = \\frac{[RL^*]}{[L^*]_T} = \\frac{[R]}{K_d^* + [R]}\n\\]\nTo allow for a proper description of the dependent variable, the general framework for direct binding is defined as\n\\[\ny = ymin + (ymax - ymin) \\frac{[R]}{K_d^* + [R]}\n\\]\n\n\n\n\n\n\n\n\n\n\n\\[\nE = mc^2\n\\tag{1}\\]\n\\[\n\\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2}\n\\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm C^2}\n  + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =\n  \\mathrm r \\mathrm C\n\\tag{2}\\]",
    "crumbs": [
      "Home",
      "Theory"
    ]
  },
  {
    "objectID": "input_format.html",
    "href": "input_format.html",
    "title": "BindCurve",
    "section": "",
    "text": "BindCurve accepts the input data either from .csv file using the load_csv function, or from pandas dataframe using the load_df function. In both cases, the data should be formatted as follows:\n\nFirst row of the file should be a header. Names of columns do not matter, they will be standardized automatically.\nFirst column must contain compound names (for each row).\nSecond column must contain concentration in any units of your choosing. This unit will be retained throughout the workflow. When loading the data, concentration can be scaled by the c_scale argument. Concentration of 0 will raise error.\nThird to Nth columns are expected to contain your response values. There can be any number of replicates. The number of replicates can be different for each compound or for each concentration point.",
    "crumbs": [
      "Home",
      "Input format"
    ]
  },
  {
    "objectID": "input_format.html#input-format",
    "href": "input_format.html#input-format",
    "title": "BindCurve",
    "section": "",
    "text": "BindCurve accepts the input data either from .csv file using the load_csv function, or from pandas dataframe using the load_df function. In both cases, the data should be formatted as follows:\n\nFirst row of the file should be a header. Names of columns do not matter, they will be standardized automatically.\nFirst column must contain compound names (for each row).\nSecond column must contain concentration in any units of your choosing. This unit will be retained throughout the workflow. When loading the data, concentration can be scaled by the c_scale argument. Concentration of 0 will raise error.\nThird to Nth columns are expected to contain your response values. There can be any number of replicates. The number of replicates can be different for each compound or for each concentration point.",
    "crumbs": [
      "Home",
      "Input format"
    ]
  }
]